# ====================================================================
# Configuración General del Proyecto
# ====================================================================

# Dominio (Domain)
# -----------------
# Dominio principal utilizado por Traefik para enrutar el tráfico y obtener certificados TLS (SSL).
# En producción, sería algo como "example.com". Para desarrollo local, "localhost" es suficiente.
# (Nota: Para probar la configuración local de Traefik, a veces se usa domain=localhost.tiangolo.com)
# (Requerido)
DOMAIN=localhost

# Host del Frontend (Frontend Host)
# ---------------------------------
# URL completa del frontend. El backend la usa para generar enlaces correctos, como en los correos
# de recuperación de contraseña. En producción debería ser https://tudominio.com.
# (Requerido)
FRONTEND_HOST=http://localhost:5173

# Entorno (Environment)
# ---------------------
# Define el entorno de ejecución de la aplicación. Puede ser "local", "staging" o "production".
# Esto permite que la aplicación se comporte de manera diferente según dónde se esté ejecutando (ej. mostrar más detalles de errores en local).
# (Requerido)
ENVIRONMENT=local

# Nombre del Proyecto (Project Name)
# ----------------------------------
# Nombre descriptivo del proyecto. Usado internamente y en logs.
# (Requerido)
PROJECT_NAME="Full Stack FastAPI Project Feature Models"

# Nombre del Stack (Stack Name)
# -----------------------------
# Identificador único para el conjunto de servicios de Docker. Es crucial para que Traefik
# pueda crear las rutas correctamente sin conflictos con otros proyectos.
# (Requerido)
STACK_NAME=full-stack-fastapi-project-feature-models

# ====================================================================
# Configuración del Backend
# ====================================================================

# Orígenes CORS del Backend (Backend CORS Origins)
# ------------------------------------------------
# Lista de dominios (separados por comas) que tienen permiso para hacer peticiones al backend
# desde un navegador. Es una medida de seguridad fundamental.
# (Requerido)
BACKEND_CORS_ORIGINS="http://localhost,http://localhost:5173,https://localhost,https://localhost:5173,http://localhost.tiangolo.com"

# Clave Secreta (Secret Key)
# --------------------------
# Una clave secreta, larga y aleatoria, utilizada para operaciones de seguridad como la firma
# de tokens JWT (JSON Web Tokens). ¡DEBE ser cambiada en producción!
# (Requerido)
SECRET_KEY=M@d3l_T3s1s_J@se

# Primer Superusuario (First Superuser)
# -------------------------------------
# Correo electrónico del primer usuario con permisos de administrador que se creará
# automáticamente al iniciar la aplicación por primera vez.
# (Requerido)
FIRST_SUPERUSER=admin@gmail.com

# Contraseña del Primer Superusuario (First Superuser Password)
# -------------------------------------------------------------
# Contraseña para la cuenta del primer superusuario.
# (Requerido)
FIRST_SUPERUSER_PASSWORD=admin@123

# ====================================================================
# Configuración de Envío de Correos (SMTP)
# ====================================================================

# Host SMTP (SMTP Host)
# ---------------------
# Dirección del servidor de correo saliente (SMTP). Ejemplo: "smtp.gmail.com".
# (Opcional, pero requerido si se necesita enviar correos)
SMTP_HOST=

# Usuario SMTP (SMTP User)
# ------------------------
# Nombre de usuario para autenticarse en el servidor SMTP.
# (Opcional, pero requerido si se necesita enviar correos)
SMTP_USER=

# Contraseña SMTP (SMTP Password)
# -------------------------------
# Contraseña para la cuenta del servidor SMTP.
# (Opcional, pero requerido si se necesita enviar correos)
SMTP_PASSWORD=

# Correo del Remitente (Emails From Email)
# ----------------------------------------
# La dirección de correo que aparecerá como remitente en los correos enviados por la aplicación.
# (Opcional, pero requerido si se necesita enviar correos)
EMAILS_FROM_EMAIL=info@example.com

# Usar TLS (SMTP TLS)
# -------------------
# Define si se debe usar la conexión segura STARTTLS. Generalmente es "True".
# (Opcional)
SMTP_TLS=True

# Usar SSL (SMTP SSL)
# -------------------
# Define si se debe usar una conexión SSL/TLS directa. Generalmente es "False" si SMTP_TLS es "True".
# (Opcional)
SMTP_SSL=False

# Puerto SMTP (SMTP Port)
# -----------------------
# Puerto del servidor SMTP. Comúnmente 587 para TLS o 465 para SSL.
# (Opcional)
SMTP_PORT=587

# ====================================================================
# Configuración de la Base de Datos (PostgreSQL)
# ====================================================================

# Servidor de PostgreSQL (Postgres Server)
# ----------------------------------------
# Dirección del servidor de la base de datos.
# En desarrollo local sin Docker puede ser "localhost".
# Si usas Docker Compose, debería ser el nombre del servicio, ej. "db".
# (Requerido)
POSTGRES_SERVER=localhost

# Puerto de PostgreSQL (Postgres Port)
# ------------------------------------
# Puerto en el que la base de datos está escuchando conexiones. El predeterminado es 5432.
# (Requerido)
POSTGRES_PORT=5432

# Nombre de la Base de Datos (Postgres DB)
# ----------------------------------------
# El nombre de la base de datos a la que se conectará la aplicación.
# (Requerido)
POSTGRES_DB=app

# Usuario de PostgreSQL (Postgres User)
# -------------------------------------
# Nombre de usuario para conectarse a la base de datos.
# (Requerido)
POSTGRES_USER=postgres

# Contraseña de PostgreSQL (Postgres Password)
# --------------------------------------------
# Contraseña para el usuario de la base de datos.
# (Requerido)
POSTGRES_PASSWORD=postgres

# ====================================================================
# Integraciones Externas y Despliegue
# ====================================================================

# Sentry DSN
# ----------
# DSN (Data Source Name) de Sentry. Si se configura, la aplicación enviará los errores
# a la plataforma de Sentry para su monitoreo y seguimiento.
# (Opcional)
SENTRY_DSN=

# Imagen Docker del Backend (Docker Image Backend)
# ------------------------------------------------
# Nombre de la imagen de Docker para el servicio de backend.
# Se usa en scripts de despliegue para hacer pull/push a un registro de contenedores.
# (Opcional para local, Requerido para CI/CD)
DOCKER_IMAGE_BACKEND=backend

# Imagen Docker del Frontend (Docker Image Frontend)
# --------------------------------------------------
# Nombre de la imagen de Docker para el servicio de frontend.
# Se usa en scripts de despliegue para hacer pull/push a un registro de contenedores.
# (Opcional para local, Requerido para CI/CD)
DOCKER_IMAGE_FRONTEND=frontend
